// Input 0
(function(a){var b=function(){};b.VERSION="0.0.1";a.Modulog=b})(window);
(function(){var a=function(){};a.VERSION="0.0.1";a.LEVEL_NONE=0;a.LEVEL_ERROR=1;a.LEVEL_WARN=2;a.LEVEL_INFO=3;a.LEVEL_DEBUG=4;a.level=a.LEVEL_DEBUG;var b=null;a.addLogTarget=function(c){"function"===typeof c&&(b=c)};a.debug=function(c,a,d){ModulogLog.level>=ModulogLog.LEVEL_DEBUG&&(c="[ DEBUG "+(a?"| "+a+" ":"")+"] "+c,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.debug(c,d):console.debug(c)),ModulogLog.__delegate(c,d))};a.info=function(a,e,d){ModulogLog.level>=ModulogLog.LEVEL_INFO&&
(a="[ INFO "+(e?"| "+e+" ":"")+"] "+a,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.info(a,d):console.info(a)),ModulogLog.__delegate(a,d))};a.warn=function(a,e,d){ModulogLog.level>=ModulogLog.LEVEL_WARN&&(a="[ WARN "+(e?"| "+e+" ":"")+"] "+a,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.warn(a,d):console.warn(a)),ModulogLog.__delegate(a,d))};a.error=function(a,e,d){ModulogLog.level>=ModulogLog.LEVEL_ERROR&&(a="[ ERROR "+(e?"| "+e+" ":"")+"] "+
a,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.error(a,d):console.error(a)),ModulogLog.__delegate(a,d))};a.__delegate=function(a,e){b&&(e?b(a+" : "+e.toString()):b(a))};window.Log=window.MLog=window.ModulogLog=a})(window.Modulog);
(function(){var a=function(){};a.VERSION="0.0.1";var b=null,c=ModulogLog;a.get=function(a){for(var d=a.split("."),c=b,f=0;f<d.length;f++){var g=d[f];c.hasOwnProperty(g)||ModulogLog.warn("Config value not found: "+a,"CONFIG");c=c[g]}return c};a.set=function(a,d){for(var c=a.split("."),f=b,g=0;g<c.length-1;g++)f=f[c[g]];f[c.pop()]=d};a.init=function(a,d){"string"===typeof a&&jQuery?$.getJSON(a,function(a){b=a;"function"===typeof d&&d()}):"object"===typeof a?b=a:c.error("Could not init config. init() function expects config object or url to config.js. Latter needs jQuery to be initialized before.",
"Modulog | ModulogConfig")};window.Config=window.MConfig=window.ModulogConfig=a})(window.Modulog);
// Input 1
(function(a){var b=function(){};b.VERSION="0.0.3";a.EC=a.EdgeCommons=b;Log.debug("v"+b.VERSION,"EdgeCommons")})(window);
// Input 2
(function(a){var b=function(){};b.VERSION="0.0.3";var c=ModulogLog;a.loadScript=function(a,d){c.debug("loadScript: "+a,"EdgeCommons | Core");try{yepnope({load:a,callback:function(b){b==a&&(c.debug("Loading external script was successful: "+a,"EdgeCommons | Core"),"function"===typeof d&&d())}})}catch(b){c.error("Loading external script failed: "+a,"EdgeCommons | Core")}};a.getInjectedData=function(a,d){try{d=d||"data";for((!a||!a.getParentSymbol)&&c.error("getInjectedData(): First argument 'sys' is not optional",
"EdgeCommons | Core");a.getParentSymbol();)a=a.getParentSymbol();var b=a.getSymbolElement().find("."+d).html();return $.parseJSON(b)}catch(f){c.error("Reading injected data failed (scriptClassSelector="+d+")","EdgeCommons | Core",f)}};a.Core=b;a.Log=c;a.debug=c.debug;a.info=c.info;a.warn=c.warn;a.error=c.error;a.Config=MConfig})(EdgeCommons);
// Input 3
(function(a){var b=function(){};b.VERSION="0.0.1";b.preloader=null;var c=ModulogLog;b.setup=function(e){try{b.preloader?e():a.loadScript("http://code.createjs.com/preloadjs-0.1.0.min.js",function(){b.preloader=new PreloadJS;e()})}catch(d){c.error("Error in setup(): "+d.toString(),"EdgeCommons | Preload",d)}};a.Preload=b})(EdgeCommons);
// Input 4
(function(a){var b=function(){};b.VERSION="0.0.1";b.soundManifest=null;var c=ModulogLog;b.setup=function(e,d){try{if(e){this.soundManifest=e;var h=function(){a.Preload.preloader.installPlugin(SoundJS);a.Preload.preloader.onFileLoad=function(){c.debug("onFileLoad","EdgeCommons | Sound")};a.Preload.preloader.onComplete=function(){c.debug("onComplete","EdgeCommons | Sound")};c.debug("Loading Sound Manifest","DEBUG",b.soundManifest);a.Preload.preloader.loadManifest(b.soundManifest,!0);d&&d()};a.Preload.preloader?
a.loadScript("http://code.createjs.com/soundjs-0.2.0.min.js",h):a.Preload.setup(function(){a.loadScript("http://code.createjs.com/soundjs-0.2.0.min.js",h)})}else c.error("Sound.setup() failed: manifest argument is not optional","EdgeCommons | Sound")}catch(f){c.error("Error in setup(): "+f.toString(),"EdgeCommons | Sound",f)}};b.play=function(a,b){if(SoundJS.checkPlugin(!0)){c.debug("Playing sound: "+a,"EdgeCommons | Sound");var h=SoundJS.play(a,SoundJS.INTERRUPT_NONE,0,0,!1,1);h&&(h.onComplete=b)}else c.error("Error in SoundJS (SoundJS.checkPlugin(true) failed)",
"EdgeCommons | Sound")};a.Sound=b})(EdgeCommons);
