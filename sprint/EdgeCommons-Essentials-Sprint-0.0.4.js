// Input 0
(function(a){var c=function(){};c.VERSION="0.0.1";a.Modulog=c})(window);
(function(){var a=function(){};a.VERSION="0.0.1";a.LEVEL_NONE=0;a.LEVEL_ERROR=1;a.LEVEL_WARN=2;a.LEVEL_INFO=3;a.LEVEL_DEBUG=4;a.level=a.LEVEL_DEBUG;var c=null;a.addLogTarget=function(b){"function"===typeof b&&(c=b)};a.debug=function(b,a,d){ModulogLog.level>=ModulogLog.LEVEL_DEBUG&&(b="[ DEBUG "+(a?"| "+a+" ":"")+"] "+b,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.debug(b,d):console.debug(b)),ModulogLog.__delegate(b,d))};a.info=function(b,a,d){ModulogLog.level>=ModulogLog.LEVEL_INFO&&
(b="[ INFO "+(a?"| "+a+" ":"")+"] "+b,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.info(b,d):console.info(b)),ModulogLog.__delegate(b,d))};a.warn=function(a,f,d){ModulogLog.level>=ModulogLog.LEVEL_WARN&&(a="[ WARN "+(f?"| "+f+" ":"")+"] "+a,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.warn(a,d):console.warn(a)),ModulogLog.__delegate(a,d))};a.error=function(a,f,d){ModulogLog.level>=ModulogLog.LEVEL_ERROR&&(a="[ ERROR "+(f?"| "+f+" ":"")+"] "+
a,"undefined"!=typeof console&&"undefined"!=typeof console.log&&(d?console.error(a,d):console.error(a)),ModulogLog.__delegate(a,d))};a.__delegate=function(a,f){c&&(f?c(a+" : "+f.toString()):c(a))};window.Log=window.MLog=window.ModulogLog=a})(window.Modulog);
(function(){var a=function(){};a.VERSION="0.0.1";var c=null,b=ModulogLog;a.get=function(a){for(var d=a.split("."),b=c,e=0;e<d.length;e++){var g=d[e];b.hasOwnProperty(g)||ModulogLog.warn("Config value not found: "+a,"CONFIG");b=b[g]}return b};a.set=function(a,d){for(var b=a.split("."),e=c,g=0;g<b.length-1;g++)e=e[b[g]];e[b.pop()]=d};a.init=function(a,d){"string"===typeof a&&jQuery?$.getJSON(a,function(a){c=a;"function"===typeof d&&d()}):"object"===typeof a?c=a:b.error("Could not init config. init() function expects config object or url to config.js. Latter needs jQuery to be initialized before.",
"Modulog | ModulogConfig")};window.Config=window.MConfig=window.ModulogConfig=a})(window.Modulog);
// Input 1
(function(a){var c=function(){};c.VERSION="0.0.4";a.EC=a.EdgeCommons=c;Log.debug("v"+c.VERSION,"EdgeCommons")})(window);
// Input 2
(function(a){var c=function(){};c.VERSION="0.0.4";var b=ModulogLog,f=null;a.loadScript=function(a,c){b.debug("loadScript: "+a,"EdgeCommons | Core");try{yepnope({load:a,callback:function(e){e==a&&(b.debug("Loading external script was successful: "+a,"EdgeCommons | Core"),"function"===typeof c&&c())}})}catch(e){b.error("Loading external script failed: "+a,"EdgeCommons | Core")}};a.getInjectedData=function(a,c){try{c=c||"data";for((!a||!a.getParentSymbol)&&b.error("getInjectedData(): First argument 'sys' is not optional",
"EdgeCommons | Core");a.getParentSymbol();)a=a.getParentSymbol();var e=a.getSymbolElement().find("."+c).html();return $.parseJSON(e)}catch(f){b.error("Reading injected data failed (scriptClassSelector="+c+")","EdgeCommons | Core",f)}};a.setAdaptiveLayouts=function(a){(!a||!a.length)&&b.error("Error in setAdaptiveLayouts(). Argument 'layouts' is not optional and has to be an array.");f=a};a.applyAdaptiveLayout=function(a,b){try{a.setVariable("doResizing",function(){var c=a.getComposition().getStage().getSymbolElement().width();
a.$(b);var e=null;$.each(f,function(a,b){c>=b-20&&(e=b)});console.log("calcLayout: "+e);a.$("currentLayout").html(a.getVariable("layout"))}),a.getVariable("doResizing")()}catch(c){console.error(c)}};a.Core=c;a.Log=b;a.debug=b.debug;a.info=b.info;a.warn=b.warn;a.error=b.error;a.Config=MConfig})(EdgeCommons);
